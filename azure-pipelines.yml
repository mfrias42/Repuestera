# Azure DevOps Pipeline para Repuestera
# Despliegue en Azure App Service
# Webhook test - Pipeline actualizado

trigger:
- main

variables:
  # Configuraci贸n de Azure
  azureSubscription: 'Azure-Service-Connection'
  webAppNameBackend: 'repuestera-api-mfrias'
  webAppNameFrontend: 'repuestera-web-mfrias'
  resourceGroupName: 'rg-repuestera'
  location: 'Brazil South'
  
  # Configuraci贸n de Node.js
  nodeVersion: '20.x'
  
  # Variables de entorno para producci贸n
  NODE_ENV: 'production'
  API_URL: 'https://repuestera-api-mfrias.azurewebsites.net/api'

stages:
- stage: Build
  displayName: 'Construcci贸n'
  jobs:
  - job: BuildBackend
    displayName: 'Construir Backend'
    pool:
      vmImage: 'ubuntu-latest'
    
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(nodeVersion)
      displayName: 'Instalar Node.js $(nodeVersion)'

    - script: |
        cd backend
        npm install --production=false
      displayName: 'Instalar dependencias del backend'
    
    - script: |
        cd backend
        npm run test
      displayName: 'Ejecutar pruebas del backend'
      continueOnError: false

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: 'backend'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/backend.zip'
        replaceExistingArchive: true
      displayName: 'Comprimir archivos del backend'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/backend.zip'
        ArtifactName: 'backend-drop'
        publishLocation: 'Container'
      displayName: 'Publicar artefacto del backend'

  - job: BuildFrontend
    displayName: 'Construir Frontend'
    pool:
      vmImage: 'ubuntu-latest'
    
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(nodeVersion)
      displayName: 'Instalar Node.js $(nodeVersion)'

    - script: |
        cd frontend
        npm install
        npm run build
      displayName: 'Instalar dependencias y construir'
      env:
        REACT_APP_API_URL: $(API_URL)
        NODE_ENV: $(NODE_ENV)

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: 'frontend/build'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/frontend.zip'
        replaceExistingArchive: true
      displayName: 'Comprimir build del frontend'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/frontend.zip'
        ArtifactName: 'frontend-drop'
        publishLocation: 'Container'
      displayName: 'Publicar artefacto del frontend'

- stage: Deploy
  displayName: 'Despliegue'
  dependsOn: Build
  condition: succeeded()
  
  jobs:
  - deployment: DeployBackend
    displayName: 'Desplegar API Backend'
    environment: 'production-backend'
    pool:
      vmImage: 'ubuntu-latest'
    
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: $(azureSubscription)
              appType: 'webAppLinux'
              appName: $(webAppNameBackend)
              package: '$(Pipeline.Workspace)/backend-drop/backend.zip'
              runtimeStack: 'NODE|18-lts'
              startUpCommand: 'npm start'
              appSettings: |
                -NODE_ENV $(NODE_ENV)
                -PORT 8000
                -WEBSITE_NODE_DEFAULT_VERSION 18.17.0
            displayName: 'Desplegar Backend a Azure App Service'

  - deployment: DeployFrontend
    displayName: 'Desplegar Frontend Web'
    environment: 'production-frontend'
    pool:
      vmImage: 'ubuntu-latest'
    dependsOn: DeployBackend
    
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: $(azureSubscription)
              appType: 'webAppLinux'
              appName: $(webAppNameFrontend)
              package: '$(Pipeline.Workspace)/frontend-drop/frontend.zip'
              runtimeStack: 'NODE|18-lts'
              startUpCommand: 'npx serve -s . -l 8080'
              appSettings: |
                -WEBSITE_NODE_DEFAULT_VERSION 18.17.0
                -PORT 8080
            displayName: 'Desplegar Frontend a Azure App Service'